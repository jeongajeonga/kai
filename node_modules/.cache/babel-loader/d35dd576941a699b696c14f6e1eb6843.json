{"ast":null,"code":"var _jsxFileName = \"/Users/ijeong-a/Desktop/jeonga/kai/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useEffect, useState } from 'react'; //css 파일을 import해서 스타일을 적용해줄 수도 있다.\n//import './App.css';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [pw, setPw] = useState(\"\");\n  const [nickName, setNickName] = useState(\"\");\n  const [isAgreeInfo, setIsAgreeInfo] = useState(\"\");\n  const [signupPath, setSignupPath] = useState(\"\");\n\n  const onEmailChange = e => {\n    setEmail(e.target.value);\n  };\n\n  const onPwChange = e => {\n    setPw(e.target.value);\n  };\n\n  useEffect(() => {\n    if (pw == \"\") {\n      return; //useEffect는 처음에 무조건 한번은 실행, 입력 값 없을 때 실행할 필요 없! \n    }\n\n    console.log('pw is changeing');\n    console.log(pw);\n  }, [pw]); //dependencies\n\n  const updateIsAgreeInfo = () => {\n    setIsAgreeInfo(prev => !prev);\n  };\n  /*\n  const updateIsAgreeInfo =() => {\n    setIsAgreeInfo(!isAgreeInfo )\n  } \n  */\n\n\n  const onSignupPathChange = e => {\n    setSignupPath(e.target.value);\n  };\n\n  const validateEmail = email => {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email.toLowerCase());\n  };\n\n  const submit = () => {\n    const payload = {\n      email: email,\n      pw: pw,\n      nickName: nickName,\n      isAgreeInfo: isAgreeInfo,\n      signupPath: signupPath\n    };\n\n    if (pw.length < 6) {\n      alert('6자 이상의 비밀번호를 입력하세요');\n      return;\n    }\n\n    if (!validateEmail(email)) {\n      alert('올바른 이메일을 입력하시오');\n      return;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"img/google.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: email,\n      onChange: e => onEmailChange(e),\n      placeholder: \"email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: pw,\n      onChange: e => onPwChange(e),\n      placeholder: \"password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      checked: isAgreeInfo,\n      type: \"checkbox\",\n      onClick: e => updateIsAgreeInfo()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: signupPath,\n      onChange: e => onSignupPathChange(e),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"search\",\n        children: \"\\uAC80\\uC0C9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"ads\",\n        children: \"\\uAD11\\uACE0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"etc\",\n        children: \"\\uC774\\uC678\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: submit,\n      children: \"\\uC81C\\uCD9C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"LYymUKeg3QxCuGnPQeiw+Ru72pg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ijeong-a/Desktop/jeonga/kai/src/App.js"],"names":["React","Component","useEffect","useState","App","email","setEmail","pw","setPw","nickName","setNickName","isAgreeInfo","setIsAgreeInfo","signupPath","setSignupPath","onEmailChange","e","target","value","onPwChange","console","log","updateIsAgreeInfo","prev","onSignupPathChange","validateEmail","re","test","toLowerCase","submit","payload","length","alert"],"mappings":"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","sourcesContent":["import React, {Component,useEffect,useState} from 'react';\n//css 파일을 import해서 스타일을 적용해줄 수도 있다.\n//import './App.css';\nconst App = () => {\n  const [email, setEmail]=useState(\"\");\n  const [pw, setPw]=useState(\"\");\n  const [nickName, setNickName]=useState(\"\");\n  const [isAgreeInfo, setIsAgreeInfo]=useState(\"\");\n  const [signupPath, setSignupPath]=useState(\"\");\n  const onEmailChange =(e) => {\n    setEmail(e.target.value)\n  }\n  const onPwChange =(e) => {\n    setPw(e.target.value)\n  }\n  useEffect( ()=>{\n    if(pw ==\"\"){\n      return  //useEffect는 처음에 무조건 한번은 실행, 입력 값 없을 때 실행할 필요 없! \n    }\n    console.log('pw is changeing');\n    console.log(pw);\n  },[pw]) //dependencies\n  const updateIsAgreeInfo =() => {\n    setIsAgreeInfo(prev => !prev)\n  } \n  /*\n  const updateIsAgreeInfo =() => {\n    setIsAgreeInfo(!isAgreeInfo )\n  } \n  */\n const onSignupPathChange = (e) => {\n   setSignupPath(e.target.value)\n }\n const validateEmail = (email) => {\n  const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(email.toLowerCase());\n}\n const submit = () => {\n   const payload ={\n     email: email, \n     pw: pw, \n     nickName: nickName, \n     isAgreeInfo: isAgreeInfo,\n     signupPath: signupPath\n   }\n   if(pw.length<6){\n     alert('6자 이상의 비밀번호를 입력하세요');\n     return\n   }\n   if(!validateEmail(email)){\n     alert('올바른 이메일을 입력하시오');\n     return\n   }\n\n }\n  return<div>\n    <img src=\"img/google.png\" />\n    <input value={email} onChange={e=>onEmailChange(e)} placeholder='email'/>\n    <input value={pw} onChange={e=>onPwChange(e)} placeholder='password'/>\n    <input checked={isAgreeInfo} type=\"checkbox\" onClick={e => updateIsAgreeInfo()}/>\n    <select value={signupPath} onChange={e=>onSignupPathChange(e)}>\n      <option value={\"search\"}>검색</option>\n      <option value={\"ads\"}>광고</option>\n      <option value={\"etc\"}>이외</option>\n    </select>\n    <button onClick ={submit}>제출</button>\n  </div>\n}\n\nexport default App\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}